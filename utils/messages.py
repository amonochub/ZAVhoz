
from models import Priority, Request, Status


# Shared emoji mappings
STATUS_EMOJIS = {
    Status.OPEN: "üü¢",
    Status.IN_PROGRESS: "üü°",
    Status.COMPLETED: "‚úÖ",
    Status.REJECTED: "‚ùå"
}

PRIORITY_EMOJIS = {
    Priority.LOW: "üü¢",
    Priority.MEDIUM: "üü°",
    Priority.HIGH: "üî¥"
}


def format_request_info(request: Request, show_user: bool = False) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞—è–≤–∫–µ"""
    message = f"""
üìã <b>–ó–∞—è–≤–∫–∞ #{request.id}</b>

üè∑Ô∏è <b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {request.title}
üìù <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> {request.description}
üè¢ <b>–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ:</b> {request.location}
{PRIORITY_EMOJIS[request.priority]} <b>–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç:</b> {request.priority.value}
{STATUS_EMOJIS[request.status]} <b>–°—Ç–∞—Ç—É—Å:</b> {request.status.value}

üìÖ <b>–°–æ–∑–¥–∞–Ω–∞:</b> {request.created_at.strftime('%d.%m.%Y %H:%M')}
"""

    if show_user:
        message += f"üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> {request.user.first_name or ''} {request.user.last_name or ''} (@{request.user.username or 'N/A'})\n"

    if request.assigned_to and request.assigned_user:
        message += f"üë∑ <b>–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:</b> {request.assigned_user.first_name or ''} {request.assigned_user.last_name or ''}\n"

    if request.completed_at:
        message += f"‚úÖ <b>–í—ã–ø–æ–ª–Ω–µ–Ω–∞:</b> {request.completed_at.strftime('%d.%m.%Y %H:%M')}\n"

    return message.strip()

def format_request_list(requests: list[Request], title: str = "–ó–∞—è–≤–∫–∏") -> str:
    """–£–ª—É—á—à–µ–Ω–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∑–∞—è–≤–æ–∫ –¥–ª—è –∑–∞–≤—Ö–æ–∑–∞"""
    if not requests:
        return f"üì≠ {title}: –∑–∞—è–≤–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"

    message = f"üìã <b>{title}</b> ({len(requests)}):\n\n"

    for i, request in enumerate(requests, 1):
        # –í–∏–∑—É–∞–ª—å–Ω—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–Ω–∏–º–∞–Ω–∏—è
        status_emoji = {
            Status.OPEN: "‚è≥",        # –û–∂–∏–¥–∞–µ—Ç
            Status.IN_PROGRESS: "üîß", # –í —Ä–∞–±–æ—Ç–µ
            Status.COMPLETED: "‚úÖ",   # –ì–æ—Ç–æ–≤–æ
            Status.REJECTED: "‚ùå"     # –û—Ç–∫–ª–æ–Ω–µ–Ω–æ
        }[request.status]

        priority_emoji = {
            Priority.HIGH: "üî¥",     # –°—Ä–æ—á–Ω–∞—è
            Priority.MEDIUM: "üü°",   # –û–±—ã—á–Ω–∞—è
            Priority.LOW: "üü¢"       # –ù–µ —Å—Ä–æ—á–Ω–∞—è
        }[request.priority]

        # –ö–æ–º–ø–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        message += f"{i}. {status_emoji}{priority_emoji} <b>#{request.id}</b>\n"
        message += f"   üìù {request.title[:40]}{'...' if len(request.title) > 40 else ''}\n"
        message += f"   üìç {request.location}\n"
        message += f"   üìÖ {request.created_at.strftime('%d.%m %H:%M')}\n\n"

    return message.strip()

def get_welcome_message(user_name: str, is_admin: bool = False) -> str:
    """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    message = f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user_name}!\n\n"
    message += "–≠—Ç–æ –±–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∞–º–∏ –Ω–∞ —Ä–µ–º–æ–Ω—Ç –∏ —Ä–∞–±–æ—Ç—ã.\n\n"

    if is_admin:
        message += "üëë <b>–í—ã –≤–æ—à–ª–∏ –∫–∞–∫ –∑–∞–≤—Ö–æ–∑</b>\n"
        message += "–£ –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ø–∞–Ω–µ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.\n\n"

    message += "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    return message

def get_stats_message(total_requests: int, completed_requests: int, avg_completion_time: float = None) -> str:
    """–°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π"""
    message = "üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞—è–≤–æ–∫</b>\n\n"
    message += f"üìã –í—Å–µ–≥–æ –∑–∞—è–≤–æ–∫: {total_requests}\n"
    message += f"‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ: {completed_requests}\n"

    if avg_completion_time:
        hours = int(avg_completion_time)
        minutes = int((avg_completion_time - hours) * 60)
        message += f"‚è±Ô∏è –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {hours}—á {minutes}–º–∏–Ω\n"

    return message
